//Состояния файлов хранилища:
//untracked   - не отслеживаемые файлы, находящиеся в поле зрения Git
//unmodefied  - закоммиченный файлы, которые не подвергались изменениям
//modefied    - изменения не проиндексированные для будущего коммита
//staged      - проиндексированные файлы для будущего коммита

git config --global user.name "Name Surname"      //назначить имя пользователя
git config --global user.email "somename@mail.ru" //назначить e-mail пользователя
git config --list                                 //выводит настройки списком
git help commit                                   //выводит документацию по команде git commit
git commit --help                                 //то же самое, то и предыдущая команда

cd E:/name_folder         //заходит в папку name_folder на диске E

git init                  //инициилизация нового репозитория в текущей папке
git status                //показывает состояние хранилища в текущей ветке

git add .                 //добавляет в индекс все неотслеживаемые файлы (из состояния untracked становятся modefied)
git add file_name.html    //добавляет в индекс конкретный файл
git add folder_name       //добавляет в индекс папку
git add --all             //добавляет все файлы untracked в отслеживание и перестраивает индексы

git rm file_name                  //убирает файл (из отслеживания) заранее удаленный физически
git rm --cached file_name         //удаляет файл из индекса
git mv filename_old filename_new  //переименовывает файл filename_old в filename_new

git commit -m "name_commit"       //коммитит изменения только из индекса, присваивая слепку название name_commit
git commit -a -m "name_commit"    //коммитит изменения, предварительно добавив в индекс все modefied файлы

git clone https://github.com/jquery/jquery.git    //клонирует репозиторий с удаленного источника в текущую папку

git remote add origin https://github.com/futurer1/rep_name.git    //создает псевдоним origin на удаленный репозиторий
git push -u origin master         //выгружает изменения из ветки master на удаленный репозиторий с псевдонимом origin

git branch                  //выводит список всех веток репозитория, значек * будет стоять напротив выбранной активной ветки
git branch -v               //выводит списком последний коммит на каждой из локальных веток
git branch -vv              //выводит списком отслеживаемые локальные ветки с доп. информацией по ним
git branch --merged         //выводит информацию какие ветки были слиты в текущую. Текущая отмечена знаком *
git branch --no-merged      //выводит список не слитых веток

git branch name_new_branch  //создает новую ветку с названием name_new_branch
git checkout name_branch    //переходит в ветку name_branch, она становится активной

git checkout -b new_branch  //создает новую ветку new_branch и сразу переходит в неё (результат выполнения двух предыдущих команд)

git branch -d name_branch   //удаляет ветку name_branch, которая до этого была объединена с другой (merged)
git branch -D name_branch   //жестко удаляет ветку даже если её изменения не были закоммичены и слиты. Может привести к потере данных!

git merge name_branch       //сливает ветку name_branch в текущую активную



git pull — проверить обновления на другом сервере.


git log -p -2 - выводит список коммитов, где -p выводит разницу внесённую в каждый коммит, а -2 количество последних коммитов в логе
git log --graph --all --decorate --oneline  //выводит красиво оформленный граф из коммитов и ветвей
