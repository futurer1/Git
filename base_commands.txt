git config --global user.name "Name Surname"      //назначить имя пользователя
git config --global user.email "somename@mail.ru" //назначить e-mail пользователя
git config --list                                 //выводит настройки списком
git help commit                                   //выводит документацию по команде git commit
git commit --help                                 //то же самое, то и предыдущая команда

cd E:/name_folder         //заходит в папку name_folder на диске E

git init                  //инициилизация нового репозитория в текущей папке
git status                //показывает состояние хранилища в текущей ветке

git add .                 //добавляет в индекс все неотслеживаемые файлы (из состояния untracked становятся modefied)
git add file_name.html    //добавляет в индекс конкретный файл
git add folder_name       //добавляет в индекс папку
git add --all             //добавляет все файлы untracked в отслеживание и перестраивает индексы

git commit -m "name_commit"     //коммитит изменения только из индекса, присваивая слепку название name_commit
git commit -a -m "name_commit"  //коммитит изменения, предварительно добавив в индекс все modefied файлы

git clone https://github.com/jquery/jquery.git    //клонирует репозиторий с удаленного источника в текущую папку

git remote add origin https://github.com/futurer1/rep_name.git    //создает псевдоним origin на удаленный репозиторий
git push -u origin master         //выгружает изменения из ветки master на удаленный репозиторий с псевдонимом origin



git branch — вывести список всех веток репозитория, значек * будет стоять напротив текущего;

git branch [new-super-cool-branch] — создать новую ветку new-super-cool-branch;

git branch -D [old-shittly-branch] — удалить ветку;

git checkout [new-super-cool-branch] — переключиться на ветку new-super-cool-branch;

git merge [new-super-cool-branch] — находясь в другой ветке, произвести слияние с  new-super-cool-branch;

git push — отправить свои изменения на другой сервере;

git pull — проверить обновления на другом сервере.

git rm [filename] - убирает файл (из отслеживания) заранее удаленный физически
git rm --cached [filename] - удаляет файл из индекса
git mv [filename_old] [filename_new] - переименовывает файл
git log -p -2 - выводит список коммитов, где -p выводит разницу внесённую в каждый коммит, а -2 количество последних коммитов в логе
